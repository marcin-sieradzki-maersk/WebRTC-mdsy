AudioCodesSession Methods:

* answer(e, i=null, s=null)
  - Answers an incoming call with specified video options
  - Parameters: videoOption, extraHeaders, extraOptions
  - Handles audio/video call answering logic

* constructor
  - AudioCodesSession class constructor

* doesScreenSharingReplaceCamera()
  - Checks if screen sharing replaces camera functionality

* duration()
  - Returns call duration

* enableReceiveVideo(e)
  - Enables/disables receiving video

* getEnabledVideoState()
  - Gets current enabled video state

* getRTCLocalStream()
  - Returns RTC local media stream

* getRTCPeerConnection()
  - Returns RTC peer connection object

* getRTCRemoteStream()
  - Returns RTC remote media stream

* getReplacesHeader()
  - Gets SIP Replaces header for call transfer

* getVideoState()
  - Gets current video state

* hasEnabledReceiveVideo()
  - Checks if receive video is enabled

* hasEnabledSendVideo()
  - Checks if send video is enabled

* hasReceiveVideo()
  - Checks if call has receive video capability

* hasSendVideo()
  - Checks if call has send video capability

* hasVideo()
  - Checks if call has video capability

* hold(e)
  - Puts call on hold or retrieves from hold
  - Returns Promise

* isAudioMuted()
  - Checks if audio is muted

* isEstablished()
  - Checks if call is established

* isLocalHold()
  - Checks if call is on local hold

* isOutgoing()
  - Checks if call is outgoing

* isReadyToReOffer()
  - Checks if call is ready for re-offer

* isRemoteHold()
  - Checks if call is on remote hold

* isScreenSharing()
  - Checks if screen sharing is active

* isTerminated()
  - Checks if call is terminated

* isVideoMuted()
  - Checks if video is muted

* muteAudio(e)
  - Mutes/unmutes audio

* muteVideo(e)
  - Mutes/unmutes video

* redirect(e, i=302, s=null)
  - Redirects call to another destination

* reject(e=486, i=null)
  - Rejects incoming call with specified code

* sendDTMF(e)
  - Sends DTMF tones

* sendInfo(e, i, s=null)
  - Sends SIP INFO message

* sendReInvite(e={})
  - Sends re-INVITE for call modification
  - Returns Promise

* sendRefer(e, i=null)
  - Sends SIP REFER for call transfer

* setRemoteHoldState()
  - Sets remote hold state

* startScreenSharing(e, i={localScreenSharing:true, enabledReceiveVideo:true, separateVideo:false})
  - Starts screen sharing functionality
  - Parameters: stream, options
  - Returns Promise

* startSendingVideo(e={})
  - Starts sending video in audio call
  - Returns Promise

* stopScreenSharing()
  - Stops screen sharing

* stopSendingVideo(e={})
  - Stops sending video
  - Returns Promise

* terminate()
  - Terminates the call

* wasAccepted()
  - Checks if call was accepted
